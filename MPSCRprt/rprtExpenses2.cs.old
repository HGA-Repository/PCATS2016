using System;
using DataDynamics.ActiveReports;
using DataDynamics.ActiveReports.Document;

namespace RSMPS
{
	public class rprtExpenses2 : ActiveReport
	{
        private decimal mdTotBud;
        private decimal mdTotSpent;
        private decimal mdTotRemain;
        private decimal mdTotForecast;
        private decimal mdTotFtoC;
        private decimal mdTotOU;

        private decimal mdExpFTC;
        private decimal mdExpForecast;

        public decimal TotalBudget
        {
            get { return mdTotBud; }
        }

        public decimal TotalSpent
        {
            get { return mdTotSpent; }
        }

        public decimal TotalForecast
        {
            get { return mdTotForecast; }
        }

        public event ReportFinishedHandler OnReportFinished;

		public rprtExpenses2()
		{
			InitializeReport();
		}

		private void ReportFooter_Format(object sender, System.EventArgs eArgs)
		{
            txtTotBudget.Value = mdTotBud;
            txtTotSpent.Value = mdTotSpent;
            txtBudgetRemainingTot.Value = mdTotRemain;
            txtFtoCTot.Value = mdTotFtoC;
            txtForecastTot.Value = mdTotForecast;
            txtOUTot.Value = mdTotOU;

            if (Convert.ToDecimal(txtOUTot.Value) < 1)
                txtOUTot.ForeColor = System.Drawing.Color.Black;
            else
                txtOUTot.ForeColor = System.Drawing.Color.Red;

            if (OnReportFinished != null)
                OnReportFinished(mdTotBud, mdTotSpent, mdTotRemain, mdTotFtoC, mdTotForecast, mdTotOU);
		}

		private void Detail_Format(object sender, System.EventArgs eArgs)
        {
            #region OldStuff
            //if (txtcexpdesc.Value != null)
            //{
            //    if (txtcexpdesc.Value.ToString() == "Expense forecast")
            //    {
            //        Detail.Visible = false;
            //        txtFtoC.Value = txtbudget.Value;
            //        txtForecast.Value = txtcosts.Value;
            //        mdExpForecast = Convert.ToDecimal(txtbudget.Value);
            //        txtbudget.Value = 0;
            //        txtcosts.Value = 0;
            //        txtBudgetRemaining.Value = 0;
            //    }
            //    else
            //    {
            //        Detail.Visible = true;
            //        mdTotBud += Convert.ToDecimal(txtbudget.Value);
            //        mdTotSpent += Convert.ToDecimal(txtcosts.Value);

            //        txtBudgetRemaining.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);

            //        if (Convert.ToDecimal(txtBudgetRemaining.Value) < 0)
            //        {
            //            txtFtoC.Value = 0;
            //        }
            //        else
            //        {
            //            txtFtoC.Value = txtBudgetRemaining.Value;
            //        }

            //        txtForecast.Value = Convert.ToDecimal(txtcosts.Value) + Convert.ToDecimal(txtFtoC.Value);
            //        txtOU.Value = Math.Abs(Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtForecast.Value));

            //        mdTotRemain += Convert.ToDecimal(txtBudgetRemaining.Value);
            //        mdTotFtoC += Convert.ToDecimal(txtFtoC.Value);
            //        mdTotForecast += Convert.ToDecimal(txtForecast.Value);
            //        mdTotOU += Convert.ToDecimal(txtOU.Value);
            //    }
            //}
            //else
            //{
            //        Detail.Visible = true;
            //        mdTotBud += Convert.ToDecimal(txtbudget.Value);
            //        mdTotSpent += Convert.ToDecimal(txtcosts.Value);

            //        txtBudgetRemaining.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);

            //        if (Convert.ToDecimal(txtBudgetRemaining.Value) < 0)
            //        {
            //            txtFtoC.Value = 0;
            //        }
            //        else
            //        {
            //            txtFtoC.Value = txtBudgetRemaining.Value;
            //        }

            //        txtForecast.Value = Convert.ToDecimal(txtcosts.Value) + Convert.ToDecimal(txtFtoC.Value);
            //        txtOU.Value = Math.Abs(Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtForecast.Value));

            //        mdTotRemain += Convert.ToDecimal(txtBudgetRemaining.Value);
            //        mdTotFtoC += Convert.ToDecimal(txtFtoC.Value);
            //        mdTotForecast += Convert.ToDecimal(txtForecast.Value);
            //        mdTotOU += Convert.ToDecimal(txtOU.Value);
            //}
            #endregion


            if (Convert.ToDecimal(txtForecast.Value) < -1000)
            {
                if (Convert.ToDecimal(txtcosts.Value) > Convert.ToDecimal(txtbudget.Value))
                {
                    txtForecast.Value = Convert.ToDecimal(txtcosts.Value);
                    txtFtoC.Value = 0;
                }
                else
                {
                    txtForecast.Value = Convert.ToDecimal(txtbudget.Value);
                    txtFtoC.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);
                }
            }
            else
            {
                if (Convert.ToDecimal(txtcosts.Value) > Convert.ToDecimal(txtForecast.Value))
                {
                    if (Convert.ToDecimal(txtcosts.Value) > Convert.ToDecimal(txtbudget.Value))
                    {
                        txtFtoC.Value = 0;
                        txtForecast.Value = Convert.ToDecimal(txtcosts.Value);
                    }
                    else
                    {
                        txtFtoC.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);
                        txtForecast.Value = Convert.ToDecimal(txtbudget.Value);
                    }
                }
                else
                {
                    txtFtoC.Value = Convert.ToDecimal(txtForecast.Value) - Convert.ToDecimal(txtcosts.Value);
                }
            }

            txtOU.Value = Convert.ToDecimal(txtForecast.Value) - Convert.ToDecimal(txtbudget.Value);

            mdTotBud += Convert.ToDecimal(txtbudget.Value);
            mdTotSpent += Convert.ToDecimal(txtcosts.Value);
            mdTotRemain += 0;
            mdTotFtoC += Convert.ToDecimal(txtFtoC.Value);
            mdTotForecast += Convert.ToDecimal(txtForecast.Value);
            mdTotOU += Convert.ToDecimal(txtOU.Value);

            if (Convert.ToDecimal(txtOU.Value) >= 0.9m)
                txtOU.ForeColor = System.Drawing.Color.Red;
            else
                txtOU.ForeColor = System.Drawing.Color.Black;
        }

		private void rprtExpenses1_ReportStart(object sender, System.EventArgs eArgs)
		{
            mdTotBud = 0;
            mdTotSpent = 0;
            mdTotRemain = 0;
            mdTotForecast = 0;
            mdTotFtoC = 0;
            mdTotOU = 0;

            mdExpFTC = 0;
            mdExpForecast = 0;
		}

		#region ActiveReports Designer generated code
		public DataDynamics.ActiveReports.DataSources.SqlDBDataSource ds = null;
		private DataDynamics.ActiveReports.ReportHeader ReportHeader = null;
		private DataDynamics.ActiveReports.Label Label1 = null;
		private DataDynamics.ActiveReports.PageHeader PageHeader = null;
		private DataDynamics.ActiveReports.Detail Detail = null;
		private DataDynamics.ActiveReports.Shape Shape13 = null;
		private DataDynamics.ActiveReports.TextBox txtbudget = null;
		private DataDynamics.ActiveReports.Shape Shape15 = null;
		private DataDynamics.ActiveReports.Shape Shape14 = null;
		private DataDynamics.ActiveReports.TextBox txtcexpdesc = null;
		private DataDynamics.ActiveReports.TextBox txtcosts = null;
		private DataDynamics.ActiveReports.TextBox txtBudgetRemaining = null;
		private DataDynamics.ActiveReports.TextBox txtFtoC = null;
		private DataDynamics.ActiveReports.TextBox txtForecast = null;
		private DataDynamics.ActiveReports.TextBox txtOU = null;
		private DataDynamics.ActiveReports.PageFooter PageFooter = null;
		private DataDynamics.ActiveReports.ReportFooter ReportFooter = null;
		private DataDynamics.ActiveReports.Shape Shape2 = null;
		private DataDynamics.ActiveReports.Shape Shape = null;
		private DataDynamics.ActiveReports.TextBox txtOUTot = null;
		private DataDynamics.ActiveReports.TextBox txtTotBudget = null;
		private DataDynamics.ActiveReports.Shape Shape1 = null;
		private DataDynamics.ActiveReports.TextBox txtTotSpent = null;
		private DataDynamics.ActiveReports.Label Label = null;
		private DataDynamics.ActiveReports.TextBox txtBudgetRemainingTot = null;
		private DataDynamics.ActiveReports.TextBox txtFtoCTot = null;
		private DataDynamics.ActiveReports.TextBox txtForecastTot = null;
		private DataDynamics.ActiveReports.Line Line = null;
		public void InitializeReport()
		{
			this.LoadLayout(this.GetType(), "RSMPS.rprtExpenses2.rpx");
			this.ds = ((DataDynamics.ActiveReports.DataSources.SqlDBDataSource)(this.DataSource));
			this.ReportHeader = ((DataDynamics.ActiveReports.ReportHeader)(this.Sections["ReportHeader"]));
			this.PageHeader = ((DataDynamics.ActiveReports.PageHeader)(this.Sections["PageHeader"]));
			this.Detail = ((DataDynamics.ActiveReports.Detail)(this.Sections["Detail"]));
			this.PageFooter = ((DataDynamics.ActiveReports.PageFooter)(this.Sections["PageFooter"]));
			this.ReportFooter = ((DataDynamics.ActiveReports.ReportFooter)(this.Sections["ReportFooter"]));
			this.Label1 = ((DataDynamics.ActiveReports.Label)(this.ReportHeader.Controls[0]));
			this.Shape13 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[0]));
			this.txtbudget = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[1]));
			this.Shape15 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[2]));
			this.Shape14 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[3]));
			this.txtcexpdesc = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[4]));
			this.txtcosts = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[5]));
			this.txtBudgetRemaining = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[6]));
			this.txtFtoC = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[7]));
			this.txtForecast = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[8]));
			this.txtOU = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[9]));
			this.Shape2 = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[0]));
			this.Shape = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[1]));
			this.txtOUTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[2]));
			this.txtTotBudget = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[3]));
			this.Shape1 = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[4]));
			this.txtTotSpent = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[5]));
			this.Label = ((DataDynamics.ActiveReports.Label)(this.ReportFooter.Controls[6]));
			this.txtBudgetRemainingTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[7]));
			this.txtFtoCTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[8]));
			this.txtForecastTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[9]));
			this.Line = ((DataDynamics.ActiveReports.Line)(this.ReportFooter.Controls[10]));
			// Attach Report Events
			this.ReportFooter.Format += new System.EventHandler(this.ReportFooter_Format);
			this.Detail.Format += new System.EventHandler(this.Detail_Format);
			this.ReportStart += new System.EventHandler(this.rprtExpenses1_ReportStart);
		}

		#endregion
	}
}
