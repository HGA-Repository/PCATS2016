using System;
using DataDynamics.ActiveReports;
using DataDynamics.ActiveReports.Document;

namespace RSMPS
{
    public delegate void ReportFinishedHandler(decimal totBud, decimal totSpent, decimal totRemn, decimal totFtoC, decimal totFore, decimal totOU);

	public class rprtExpenses1 : ActiveReport
	{
        private decimal mdTotBud;
        private decimal mdTotSpent;
        private decimal mdTotRemain;
        private decimal mdTotForecast;
        private decimal mdTotFtoC;
        private decimal mdTotOU;

        private decimal mdExpFTC;
        private decimal mdExpForecast;

        public decimal TotalBudget
        {
            get { return mdTotBud; }
        }

        public decimal TotalSpent
        {
            get { return mdTotSpent; }
        }

        public decimal TotalForecast
        {
            get { return mdTotForecast; }
        }

        public event ReportFinishedHandler OnReportFinished;

		public rprtExpenses1()
		{
			InitializeReport();
		}

		private void ReportFooter_Format(object sender, System.EventArgs eArgs)
		{
            txtTotBudget.Value = mdTotBud;
            txtTotSpent.Value = mdTotSpent;
            txtBudgetRemainingTot.Value = mdTotRemain;
            txtFtoCTot.Value = mdTotFtoC;
            txtForecastTot.Value = mdTotForecast;
            txtOUTot.Value = mdTotOU;

            if (mdExpForecast != 0)
            {
                txtTotExpFTC.Value = mdExpForecast - mdTotSpent;
                txtTotExpForecast.Value = mdExpForecast;
                txtTotExpOU.Value = mdExpForecast - mdTotBud;

                mdTotFtoC = mdExpForecast - mdTotSpent;
                mdTotForecast = mdExpForecast;
                mdTotOU = mdExpForecast - mdTotBud;
            }
            else
            {
                txtTotExpFTC.Value = mdTotFtoC;
                txtTotExpForecast.Value = mdTotForecast;
                txtTotExpOU.Value = mdTotOU;
            }

            if (OnReportFinished != null)
                OnReportFinished(mdTotBud, mdTotSpent, mdTotRemain, mdTotFtoC, mdTotForecast, mdTotOU);
		}

		private void Detail_Format(object sender, System.EventArgs eArgs)
		{
            if (txtcexpdesc.Value != null)
            {
                if (txtcexpdesc.Value.ToString() == "Expense forecast")
                {
                    Detail.Visible = false;
                    txtFtoC.Value = txtbudget.Value;
                    txtForecast.Value = txtcosts.Value;
                    mdExpForecast = Convert.ToDecimal(txtbudget.Value);
                    txtbudget.Value = 0;
                    txtcosts.Value = 0;
                    txtBudgetRemaining.Value = 0;
                }
                else
                {
                    Detail.Visible = true;
                    mdTotBud += Convert.ToDecimal(txtbudget.Value);
                    mdTotSpent += Convert.ToDecimal(txtcosts.Value);

                    txtBudgetRemaining.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);

                    if (Convert.ToDecimal(txtBudgetRemaining.Value) < 0)
                    {
                        txtFtoC.Value = 0;
                    }
                    else
                    {
                        txtFtoC.Value = txtBudgetRemaining.Value;
                    }

                    txtForecast.Value = Convert.ToDecimal(txtcosts.Value) + Convert.ToDecimal(txtFtoC.Value);
                    txtOU.Value = Math.Abs(Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtForecast.Value));

                    mdTotRemain += Convert.ToDecimal(txtBudgetRemaining.Value);
                    mdTotFtoC += Convert.ToDecimal(txtFtoC.Value);
                    mdTotForecast += Convert.ToDecimal(txtForecast.Value);
                    mdTotOU += Convert.ToDecimal(txtOU.Value);
                }
            }
            else
            {
                    Detail.Visible = true;
                    mdTotBud += Convert.ToDecimal(txtbudget.Value);
                    mdTotSpent += Convert.ToDecimal(txtcosts.Value);

                    txtBudgetRemaining.Value = Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtcosts.Value);

                    if (Convert.ToDecimal(txtBudgetRemaining.Value) < 0)
                    {
                        txtFtoC.Value = 0;
                    }
                    else
                    {
                        txtFtoC.Value = txtBudgetRemaining.Value;
                    }

                    txtForecast.Value = Convert.ToDecimal(txtcosts.Value) + Convert.ToDecimal(txtFtoC.Value);
                    txtOU.Value = Math.Abs(Convert.ToDecimal(txtbudget.Value) - Convert.ToDecimal(txtForecast.Value));

                    mdTotRemain += Convert.ToDecimal(txtBudgetRemaining.Value);
                    mdTotFtoC += Convert.ToDecimal(txtFtoC.Value);
                    mdTotForecast += Convert.ToDecimal(txtForecast.Value);
                    mdTotOU += Convert.ToDecimal(txtOU.Value);
            }
		}

		private void rprtExpenses1_ReportStart(object sender, System.EventArgs eArgs)
		{
            mdTotBud = 0;
            mdTotSpent = 0;
            mdTotRemain = 0;
            mdTotForecast = 0;
            mdTotFtoC = 0;
            mdTotOU = 0;

            mdExpFTC = 0;
            mdExpForecast = 0;
		}

		#region ActiveReports Designer generated code
		public DataDynamics.ActiveReports.DataSources.SqlDBDataSource ds = null;
		private DataDynamics.ActiveReports.ReportHeader ReportHeader = null;
		private DataDynamics.ActiveReports.Label Label1 = null;
		private DataDynamics.ActiveReports.PageHeader PageHeader = null;
		private DataDynamics.ActiveReports.Detail Detail = null;
		private DataDynamics.ActiveReports.Shape Shape13 = null;
		private DataDynamics.ActiveReports.TextBox txtbudget = null;
		private DataDynamics.ActiveReports.Shape Shape15 = null;
		private DataDynamics.ActiveReports.Shape Shape14 = null;
		private DataDynamics.ActiveReports.TextBox txtcexpdesc = null;
		private DataDynamics.ActiveReports.TextBox txtcosts = null;
		private DataDynamics.ActiveReports.TextBox txtBudgetRemaining = null;
		private DataDynamics.ActiveReports.TextBox txtFtoC = null;
		private DataDynamics.ActiveReports.TextBox txtForecast = null;
		private DataDynamics.ActiveReports.TextBox txtOU = null;
		private DataDynamics.ActiveReports.PageFooter PageFooter = null;
		private DataDynamics.ActiveReports.ReportFooter ReportFooter = null;
		private DataDynamics.ActiveReports.Shape Shape2 = null;
		private DataDynamics.ActiveReports.Shape Shape = null;
		private DataDynamics.ActiveReports.TextBox txtOUTot = null;
		private DataDynamics.ActiveReports.TextBox txtTotBudget = null;
		private DataDynamics.ActiveReports.Shape Shape1 = null;
		private DataDynamics.ActiveReports.TextBox txtTotSpent = null;
		private DataDynamics.ActiveReports.Label Label = null;
		private DataDynamics.ActiveReports.TextBox txtBudgetRemainingTot = null;
		private DataDynamics.ActiveReports.TextBox txtFtoCTot = null;
		private DataDynamics.ActiveReports.TextBox txtForecastTot = null;
		private DataDynamics.ActiveReports.Label Label2 = null;
		private DataDynamics.ActiveReports.Shape Shape3 = null;
		private DataDynamics.ActiveReports.TextBox txtTotExpOU = null;
		private DataDynamics.ActiveReports.TextBox txtTotExpFTC = null;
		private DataDynamics.ActiveReports.TextBox txtTotExpForecast = null;
		public void InitializeReport()
		{
			this.LoadLayout(this.GetType(), "RSMPS.rprtExpenses1.rpx");
			this.ds = ((DataDynamics.ActiveReports.DataSources.SqlDBDataSource)(this.DataSource));
			this.ReportHeader = ((DataDynamics.ActiveReports.ReportHeader)(this.Sections["ReportHeader"]));
			this.PageHeader = ((DataDynamics.ActiveReports.PageHeader)(this.Sections["PageHeader"]));
			this.Detail = ((DataDynamics.ActiveReports.Detail)(this.Sections["Detail"]));
			this.PageFooter = ((DataDynamics.ActiveReports.PageFooter)(this.Sections["PageFooter"]));
			this.ReportFooter = ((DataDynamics.ActiveReports.ReportFooter)(this.Sections["ReportFooter"]));
			this.Label1 = ((DataDynamics.ActiveReports.Label)(this.ReportHeader.Controls[0]));
			this.Shape13 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[0]));
			this.txtbudget = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[1]));
			this.Shape15 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[2]));
			this.Shape14 = ((DataDynamics.ActiveReports.Shape)(this.Detail.Controls[3]));
			this.txtcexpdesc = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[4]));
			this.txtcosts = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[5]));
			this.txtBudgetRemaining = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[6]));
			this.txtFtoC = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[7]));
			this.txtForecast = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[8]));
			this.txtOU = ((DataDynamics.ActiveReports.TextBox)(this.Detail.Controls[9]));
			this.Shape2 = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[0]));
			this.Shape = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[1]));
			this.txtOUTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[2]));
			this.txtTotBudget = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[3]));
			this.Shape1 = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[4]));
			this.txtTotSpent = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[5]));
			this.Label = ((DataDynamics.ActiveReports.Label)(this.ReportFooter.Controls[6]));
			this.txtBudgetRemainingTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[7]));
			this.txtFtoCTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[8]));
			this.txtForecastTot = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[9]));
			this.Label2 = ((DataDynamics.ActiveReports.Label)(this.ReportFooter.Controls[10]));
			this.Shape3 = ((DataDynamics.ActiveReports.Shape)(this.ReportFooter.Controls[11]));
			this.txtTotExpOU = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[12]));
			this.txtTotExpFTC = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[13]));
			this.txtTotExpForecast = ((DataDynamics.ActiveReports.TextBox)(this.ReportFooter.Controls[14]));
			// Attach Report Events
			this.ReportFooter.Format += new System.EventHandler(this.ReportFooter_Format);
			this.Detail.Format += new System.EventHandler(this.Detail_Format);
			this.ReportStart += new System.EventHandler(this.rprtExpenses1_ReportStart);
		}

		#endregion
	}
}
